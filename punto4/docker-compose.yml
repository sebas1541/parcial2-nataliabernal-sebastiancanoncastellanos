version: '3.8'

services:
  traefik:
    image: "traefik:v3.5" # Use a recent Traefik image
    container_name: "traefik"
    restart: unless-stopped
    ports:
      - "80:80" # The HTTP port
      - "8080:8080" # The Traefik dashboard port (for development/monitoring)
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro" # Mount Docker socket for Traefik to discover services
    command:
      - "--api.insecure=true" # Enable the insecure API for dashboard access (for development only)
      - "--providers.docker=true" # Enable Docker provider
      - "--providers.docker.exposedbydefault=false" # Only expose services explicitly labeled
      - "--providers.docker.network=web" # Specify the network Traefik should monitor
      - "--entrypoints.web.address=:80" # Define an entrypoint for HTTP traffic
    networks:
      - web

  nginx:
    image: nginx:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`your-nginx-domain.com`)"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls.certresolver=myresolver"
      - "traefik.http.services.nginx.loadbalancer.server.port=80" # Nginx listens on port 80 internally
    volumes:
      - ./nginx/html:/usr/share/nginx/html:ro # Mount your static content
    networks:
      - web

  neo4j:
    image: "neo4j:5.23"
    container_name: "neo4j"
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/password123  
      - NEO4J_PLUGINS=["apoc"]    
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G

    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7474/browser/"]
      interval: 30s
      timeout: 10s
      retries: 3
  
    labels:
      - "traefik.enable=false"  
    ports:
      - "7474" # HTTP
      - "7687" # Bolt

  flask_api:
    build: ./flask-api
    restart: unless-stopped
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      NEO4J_URI: "bolt://neo4j_db:7687"
      NEO4J_USER: "neo4j"
      NEO4J_PASSWORD: "secret"
      PORT: "5000"
    # No ports exposed to host - accessed through Traefik only
    networks:
      - web

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:

networks:
  web:
    driver: bridge