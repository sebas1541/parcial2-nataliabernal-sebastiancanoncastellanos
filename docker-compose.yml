version: '3.8'

services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: always
    command:
      - "--log.level=INFO"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik

  neo4j:
    image: neo4j:5.22.0-community
    container_name: neo4j_db
    restart: always
    environment:
      NEO4J_AUTH: "neo4j/supersecurepassword"
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    networks:
      - traefik

  pikachu:
    build: .
    container_name: pikachu
    restart: always
    depends_on:
      - neo4j
    environment:
      NEO4J_URI: "bolt://neo4j_db:7687"
      NEO4J_USER: "neo4j"
      NEO4J_PASSWORD: "supersecurepassword"
      FLASK_ENV: "production"
    expose:
      - "5000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pikachu.rule=Host(`pikachu.localhost`)"
      - "traefik.http.routers.pikachu.entrypoints=web"
      - "traefik.http.services.pikachu.loadbalancer.server.port=5000"
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - traefik

  charizard:
    build: .
    container_name: charizard
    restart: always
    depends_on:
      - neo4j
    environment:
      NEO4J_URI: "bolt://neo4j_db:7687"
      NEO4J_USER: "neo4j"
      NEO4J_PASSWORD: "supersecurepassword"
      FLASK_ENV: "production"
    expose:
      - "5000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.charizard.rule=Host(`charizard.localhost`)"
      - "traefik.http.routers.charizard.entrypoints=web"
      - "traefik.http.services.charizard.loadbalancer.server.port=5000"
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - traefik

  onix:
    build: .
    container_name: onix
    restart: always
    depends_on:
      - neo4j
    environment:
      NEO4J_URI: "bolt://neo4j_db:7687"
      NEO4J_USER: "neo4j"
      NEO4J_PASSWORD: "supersecurepassword"
      FLASK_ENV: "production"
    expose:
      - "5000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.onix.rule=Host(`onix.localhost`)"
      - "traefik.http.routers.onix.entrypoints=web"
      - "traefik.http.services.onix.loadbalancer.server.port=5000"
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - traefik

volumes:
  neo4j_data:
    driver: local

networks:
  traefik:
    driver: bridge
